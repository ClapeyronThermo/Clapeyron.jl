function a_res(model::SAFTgammaMieFamily, z, V, T)
    return a_mono(model,z,V,T) + a_chain(model,z,V,T) + a_assoc(model,z,V,T)
end

function a_mono(model::SAFTgammaMieFamily, z, V, T)
    return a_hs(model,z,V,T) + a1(model,z,V,T) + a2(model,z,V,T) + a3(model,z,V,T)
end

function a_chain(model::SAFTgammaMieFamily, z, V, T)
    return 0
end

function a_assoc(model::SAFTgammaMieFamily, z, V, T)
    return 0
end

function a_hs(model::SAFTgammaMieFamily, z, V, T)
    Œ∂0   = @f(Œ∂,0)
    Œ∂1   = @f(Œ∂,1)
    Œ∂2   = @f(Œ∂,2)
    Œ∂3   = @f(Œ∂,3)
    œÅ = sum(z)*N_A/V
    return 6/œÄ/œÅ * (3Œ∂1*Œ∂2/(1-Œ∂3) + Œ∂2^3/(Œ∂3*(1-Œ∂3)^2) + (Œ∂2^3/Œ∂3^2-Œ∂0)*log(1-Œ∂3))
end

#= for n in 1:3 =#
#=     @eval   function $(Symbol(:a,Symbol(n)))(model::SAFTgammaMieFamily, z, V, T) =#
#=                 x = z/sum(z) =#
#=                 v = model.group_multiplicities =#
#=                 v_st = model.params.segment =#
#=                 S = model.params.shapefactor =#

#=                 return 1/(kB*T)^n * sum(x[i] * sum(v[i][k]*v_st[k]*S[k] for k in @groups(i)) for i in @comps) * @eval $(@f(Symbol(:aÃÇ,Symbol(n)))) =#
#=             end =#

#=     @eval   function $(Symbol(:aÃÇ,Symbol(n)))(model::SAFTgammaMieFamily, z, V, T) =#
#=                 return sum(@f(xS,k)*@f(xS,l) * @eval $(@f(Symbol(:aÃÇ,Symbol(n)),k,l)) for k in @groups for l in @groups) =#
#=             end =#
#= end =#
#
#= function aÃÇ(model::SAFTgammaMieFamily, z, V, T) =#

function a1(model::SAFTgammaMieFamily, z, V, T)
    x = z/sum(z)
    v = model.group_multiplicities
    v_st = model.params.segment
    S = model.params.shapefactor

    return 1/T * sum(x[i]*sum(v[i][k]*v_st[k]*S[k] for k in @groups(i)) for i in @comps) * @f(aÃÇ1)
end
function a2(model::SAFTgammaMieFamily, z, V, T)
    x = z/sum(z)
    v = model.group_multiplicities
    v_st = model.params.segment
    S = model.params.shapefactor

    return 1/T^2 * sum(x[i]*sum(v[i][k]*v_st[k]*S[k] for k in @groups(i)) for i in @comps) * @f(aÃÇ2)
end
function a3(model::SAFTgammaMieFamily, z, V, T)
    x = z/sum(z)
    v = model.group_multiplicities
    v_st = model.params.segment
    S = model.params.shapefactor

    return 1/T^3 * sum(x[i]*sum(v[i][k]*v_st[k]*S[k] for k in @groups(i)) for i in @comps) * @f(aÃÇ3)
end

function aÃÇ1(model::SAFTgammaMieFamily, z, V, T)
    return sum(@f(xS,k)*@f(xS,l)*@f(aÃÇ1,k,l) for k in @groups for l in @groups)
end
function aÃÇ2(model::SAFTgammaMieFamily, z, V, T)
    return sum(@f(xS,k)*@f(xS,l)*@f(aÃÇ2,k,l) for k in @groups for l in @groups)
end
function aÃÇ3(model::SAFTgammaMieFamily, z, V, T)
    return sum(@f(xS,k)*@f(xS,l)*@f(aÃÇ3,k,l) for k in @groups for l in @groups)
end

function aÃÇ1(model::SAFTgammaMieFamily, z, V, T, k, l)
    œÉ = model.params.sigma[union(k,l)]
    Œª_a = model.params.lambda_r[union(k,l)]
    Œª_r = model.params.lambda_a[union(k,l)]

    x0 = œÉ/@f(d,k,l)
    return @f(C,k,l) * (x0^Œª_a*(@f(aÃÇ1_S,k,l,Œª_a)+@f(B,k,l,Œª_a)) - x0^Œª_r*(@f(aÃÇ1_S,k,l,Œª_r)+@f(B,k,l,Œª_r)))
end
function aÃÇ2(model::SAFTgammaMieFamily, z, V, T, k, l)
    œÉ = model.params.sigma[union(k,l)]
    œµ = model.params.epsilon[union(k,l)]
    Œª_a = model.params.lambda_r[union(k,l)]
    Œª_r = model.params.lambda_a[union(k,l)]

    x0 = œÉ/@f(d,k,l)
    return 1/2*@f(K_hs)*(1+@f(ùúí,k,l))*@f(C,k,l)^2 * (
           x0^(2Œª_a)*(@f(aÃÇ1_S,k,l,2Œª_a) + @f(B,k,l,2Œª_a))
         - 2x0^(Œª_a+Œª_r)*(@f(aÃÇ1_S,k,l,Œª_a+Œª_r) + @f(B,k,l,Œª_a+Œª_r))
         + x0^(2Œª_r)*(@f(aÃÇ1_S,k,l,2Œª_r) + @f(B,k,l,2Œª_r)) )
end
function aÃÇ3(model::SAFTgammaMieFamily, z, V, T, k, l)
    œµ = model.params.epsilon[union(k,l)]

    Œ∂X_st_ = @f(Œ∂X_st)
    return -œµ^3*@f(f,k,l,4)*Œ∂X_st_ * exp(@f(f,k,l,5)*Œ∂X_st_ + @f(f,k,l,6)*Œ∂X_st_^2)
end

function B(model::SAFTgammaMieFamily, z, V, T, k, l, Œª)
    œµ = model.params.epsilon[union(k,l)]
    Œ∂X_ = @f(Œ∂X)
    return 2œÄ*@f(œÅS)*@f(d,k,l)^3*œµ * ((1-Œ∂X_/2)/(1-Œ∂X_)^3*@f(I,k,l,Œª)-9Œ∂X_*(1+Œ∂X_)/(2(1-Œ∂X_)^3)*@f(J,k,l,Œª))
end

function Œ∂X(model::SAFTgammaMieFamily, z, V, T)
    return œÄ*@f(œÅS)/6 * sum(@f(xS,k)*@f(xS,l)*@f(d,k,l)^3 for k in @groups for l in @groups)
end

function Œ∂X_st(model::SAFTgammaMieFamily, z, V, T)
    œÉ = model.params.sigma
    return œÄ*@f(œÅS)/6 * sum(@f(xS,k)*@f(xS,l)*œÉ[union(k,l)]^3 for k in @groups for l in @groups)
end

function I(model::SAFTgammaMieFamily, z, V, T, k, l, Œª)
    œÉ = model.params.sigma[union(k,l)]
    x0 = œÉ/@f(d,k,l)
    return (1-x0^(3-Œª))/(Œª-3)
end

function J(model::SAFTgammaMieFamily, z, V, T, k, l, Œª)
    œÉ = model.params.sigma[union(k,l)]
    x0 = œÉ/@f(d,k,l)
    return (1-x0^(4-Œª)*(Œª-3)+x0^(3-Œª)*(Œª-4))/((Œª-3)*(Œª-4))
end

function aÃÇ1_S(model::SAFTgammaMieFamily, z, V, T, k, l, Œª)
    œµ = model.params.epsilon[union(k,l)]
    Œ∂_eff_ = @f(Œ∂_eff, Œª)
    return -2œÄ*@f(œÅS) * œµ*@f(d,k,l)^3/(Œª-3) * (1-Œ∂_eff_/2)/(1-Œ∂_eff_)^3
end

function Œ∂_eff(model::SAFTgammaMieFamily, z, V, T, Œª)
    A = [ 0.81096    1.7888   -37.578   92.284;
          1.02050  -19.341    151.26  -463.50 ;
         -1.90570   22.845   -228.14   973.92 ;
          1.08850   -6.1962   106.98  -677.64  ]
    Œ∂X_ = @f(Œ∂X)
    return A * [1; 1/Œª; 1/Œª^2; 1/Œª^3] ‚ãÖ [Œ∂X_; Œ∂X_^2; Œ∂X_^3; Œ∂X_^4]
end

function K_hs(model::SAFTgammaMieFamily, z, V, T)
    Œ∂X_ = @f(Œ∂X)
    return (1-Œ∂X_)^4/(1+4Œ∂X_+4Œ∂X_^2-4Œ∂X_^3+Œ∂X_^4)
end

function ùúí(model::SAFTgammaMieFamily, z, V, T, k, l)
    Œ∂X_st_ = @f(Œ∂X_st)
    return @f(f,k,l,1)*Œ∂X_st_ + @f(f,k,l,2)*Œ∂X_st_^5 + @f(f,k,l,3)*Œ∂X_st_^8
end

function f(model::SAFTgammaMieFamily, z, V, T, k, l, m)
    œï = [[7.5365557, -359.440,  1550.9, -1.199320, -1911.2800,  9236.9,  10.0],
         [-37.604630,  1825.60, -5070.1,  9.063632,  21390.175, -129430,  10.0],
         [71.745953, -3168.00,  6534.6, -17.94820, -51320.700,  357230,  0.57],
         [-46.835520,  1884.20, -3288.7,  11.34027,  37064.540, -315530, -6.70],
         [-2.4679820,- 0.82376, -2.7171,  20.52142,  1103.7420,  1390.2, -8.00],
         [-0.5027200, -3.19350,  2.0883, -56.63770, -3264.6100, -4518.2,   NaN],
         [8.0956883,  3.70900,  0.0000,  40.53683,  2556.1810,  4241.6,   NaN]];
    Œª_a = model.params.lambda_r[union(k,l)]
    Œª_r = model.params.lambda_a[union(k,l)]

    Œ± = @f(C,k,l)*(1/(Œª_a-3)-1/(Œª_r-3))
    return sum(œï[i+1][m]*Œ±^i for i in 0:3)/(1+sum(œï[i+1][m]*Œ±^(i-3) for i in 4:6))
end

function Œ∂(model::SAFTgammaMieFamily, z, V, T, m)
    return œÄ/6*@f(œÅS)*sum(@f(xS,k)*@f(d,k)^m for k in @groups)
end

function œÅS(model::SAFTgammaMieFamily, z, V, T)
    x = z/sum(z)
    v = model.group_multiplicities
    v_st = model.params.segment
    S = model.params.shapefactor

    œÅ = sum(z)*N_A/V
    return œÅ * sum(x[i] * sum(v[i][k]*v_st[k]*S[k] for k in @groups(i)) for i in @comps)
end

function xS(model::SAFTgammaMieFamily, z, V, T, k)
    x = z/sum(z)
    v = model.group_multiplicities
    v_st = model.params.segment
    S = model.params.shapefactor

    return sum(x[i]*v[i][k]*v_st[k]*S[k] for i in @comps) / sum(x[i] * sum(v[i][l]*v_st[l]*S[l] for l in @groups(i)) for i in @comps)
end

function d(model::SAFTgammaMieFamily, z, V, T, k)
    œµ = model.params.epsilon[k]
    œÉ = model.params.sigma[k]
    Œª_r = model.params.lambda_r[k]
    Œª_a = model.params.lambda_a[k]
    u = [0.26356031971814109102031,1.41340305910651679221800,3.59642577104072208122300,7.08581000585883755692200,12.6408008442757826594300]
    w = [0.5217556105828086524759,0.3986668110831759274500,7.5942449681707595390e-2,3.6117586799220484545e-3,2.3369972385776227891e-5]
    Œ∏ = @f(C,k,k)*œµ/T
    return œÉ*(1-sum(w[j]*(Œ∏./(Œ∏+u[j]))^(1/Œª_r)*(exp(Œ∏*(1/(Œ∏./(Œ∏+u[j]))^(Œª_a/Œª_r)-1))/(u[j]+Œ∏)/Œª_r) for j in 1:5))
end

function d(model::SAFTgammaMieFamily, z, V, T, k, l)
    # Lorentz mixing rule
    if k == l
        return @f(d, k)
    else
        return (@f(d, k) + @f(d, l))/2
    end
end

function C(model::SAFTgammaMieFamily, z, V, T, k, l)
    Œª_r = model.params.lambda_r[union(k,l)]
    Œª_a = model.params.lambda_a[union(k,l)]
    return (Œª_r/(Œª_r-Œª_a)) * (Œª_r/Œª_a)^(Œª_a/(Œª_r-Œª_a))
end
